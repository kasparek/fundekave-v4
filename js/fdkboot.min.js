jQuery.base64 = function($) {
  var _PADCHAR = "=", _ALPHA = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", _VERSION = "1.0";
  function _getbyte64(s, i) {
    var idx = _ALPHA.indexOf(s.charAt(i));
    if (idx === -1) {
      throw "Cannot decode base64";
    }
    return idx;
  }
  function _decode(s) {
    var pads = 0, i, b10, imax = s.length, x = [];
    s = String(s);
    if (imax === 0) {
      return s;
    }
    if (imax % 4 !== 0) {
      throw "Cannot decode base64";
    }
    if (s.charAt(imax - 1) === _PADCHAR) {
      pads = 1;
      if (s.charAt(imax - 2) === _PADCHAR) {
        pads = 2;
      }
      imax -= 4;
    }
    for (i = 0;i < imax;i += 4) {
      b10 = _getbyte64(s, i) << 18 | _getbyte64(s, i + 1) << 12 | _getbyte64(s, i + 2) << 6 | _getbyte64(s, i + 3);
      x.push(String.fromCharCode(b10 >> 16, b10 >> 8 & 255, b10 & 255));
    }
    switch(pads) {
      case 1:
        b10 = _getbyte64(s, i) << 18 | _getbyte64(s, i + 1) << 12 | _getbyte64(s, i + 2) << 6;
        x.push(String.fromCharCode(b10 >> 16, b10 >> 8 & 255));
        break;
      case 2:
        b10 = _getbyte64(s, i) << 18 | _getbyte64(s, i + 1) << 12;
        x.push(String.fromCharCode(b10 >> 16));
        break;
    }
    return x.join("");
  }
  function _getbyte(s, i) {
    var x = s.charCodeAt(i);
    if (x > 255) {
      throw "INVALID_CHARACTER_ERR: DOM Exception 5";
    }
    return x;
  }
  function _encode(s) {
    if (arguments.length !== 1) {
      throw "SyntaxError: exactly one argument required";
    }
    s = String(s);
    var i, b10, x = [], imax = s.length - s.length % 3;
    if (s.length === 0) {
      return s;
    }
    for (i = 0;i < imax;i += 3) {
      b10 = _getbyte(s, i) << 16 | _getbyte(s, i + 1) << 8 | _getbyte(s, i + 2);
      x.push(_ALPHA.charAt(b10 >> 18));
      x.push(_ALPHA.charAt(b10 >> 12 & 63));
      x.push(_ALPHA.charAt(b10 >> 6 & 63));
      x.push(_ALPHA.charAt(b10 & 63));
    }
    switch(s.length - imax) {
      case 1:
        b10 = _getbyte(s, i) << 16;
        x.push(_ALPHA.charAt(b10 >> 18) + _ALPHA.charAt(b10 >> 12 & 63) + _PADCHAR + _PADCHAR);
        break;
      case 2:
        b10 = _getbyte(s, i) << 16 | _getbyte(s, i + 1) << 8;
        x.push(_ALPHA.charAt(b10 >> 18) + _ALPHA.charAt(b10 >> 12 & 63) + _ALPHA.charAt(b10 >> 6 & 63) + _PADCHAR);
        break;
    }
    return x.join("");
  }
  return {decode:_decode, encode:_encode, VERSION:_VERSION};
}(jQuery);
var Fajax = new function() {
  var o = this;
  o.xhrList = {};
  o.top = 0;
  o.formStop = false;
  o.formSent = null;
  o.init = function() {
    if ($(".fajaxform").length > 0) {
      listen("btn", "click", Fajax.form);
    }
    if ($(".fajaxpager").length > 0) {
      listen("fajaxpager", "click", o.pager);
    }
    listen("fajaxa", "click", o.a);
    $.ajaxSetup({scriptCharset:"utf-8", contentType:"text/xml; charset=utf-8", dataType:"xml", processData:false, cache:false});
  };
  o.pager = function() {
    return false;
  };
  o.a = function(e) {
    var t = $(e.currentTarget), href = t.attr("href");
    o.top = null;
    if (t.hasClass("confirm")) {
      if (!confirm(t.attr("title"))) {
        return false;
      }
    }
    var k = gup("k", href), id = t.attr("id"), m = gup("m", href);
    if (!k) {
      k = 0;
    }
    var action = m + "/" + gup("d", href) + "/" + k;
    if (id) {
      action += "/" + id;
    }
    if (t.hasClass("keepScroll")) {
      o.top = $(window).scrollTop();
    }
    if (t.hasClass("progress")) {
      var bar = $(".showProgress"), h = bar.height();
      bar.addClass("lbLoading").css("height", (h > 0 ? h : $(window).height()) + "px");
    }
    o.action(action);
    return false;
  };
  o.action = function(action) {
    var l = action.split("/"), m = l[0], d = l[1], k = l[2], id = l[3], res = false, prop = false;
    if (k == 0) {
      k = null;
    }
    if (d) {
      l = d.split(";");
      while (l.length > 0) {
        var row = l.shift().split("=");
        if (row[1].indexOf("$") == 0) {
          row[1] = gup(row[1].substr(1), window.location.search);
        }
        o.add(row[0], row[1]);
        if (row[0] == "result") {
          res = true;
        }
        if (row[0] == "resultProperty") {
          prop = true;
        }
      }
    }
    if (id) {
      if (!res) {
        o.add("result", id);
      }
      if (!prop) {
        o.add("resultProperty", "$html");
      }
    }
    o.send(m, k);
    return false;
  };
  o.form = function(e, form) {
    var t = e ? e.currentTarget : null, jt = t ? $(t) : null;
    if (!e && !form || e && !$(t.form).hasClass("fajaxform")) {
      return;
    }
    if (jt && jt.hasClass("noFajax")) {
      return;
    }
    if (e) {
      e.preventDefault();
    }
    if (o.formStop == true) {
      o.formStop = false;
      return false;
    }
    if (jt && jt.hasClass("confirm") && !confirm(jt.attr("title"))) {
      return false;
    }
    if (tinymce) {
      tinymce.triggerSave();
    }
    o.formSent = form ? form : t.form;
    var arr = $(o.formSent).serializeArray(), action, res = false, prop = false;
    while (arr.length > 0) {
      var v = arr.shift();
      if (v.name == "m") {
        action = v.value;
      } else {
        o.add(v.name, v.value);
      }
      if (v.name == "result") {
        res = true;
      }
      if (v.name == "resultProperty") {
        prop = true;
      }
    }
    if (!res) {
      o.add("result", $(o.formSent).attr("id"));
    }
    if (!prop) {
      o.add("resultProperty", "$html");
    }
    o.add("action", t ? t.name : "save");
    o.add("k", gup("k", o.formSent.action));
    o.send(!action ? gup("m", o.formSent.action) : action, gup("k", o.formSent.action));
    $(".btn").attr("disabled", "disabled");
    return false;
  };
  o.request = new function() {
    var x = this;
    x.a = [];
    x.s = '<Item name="{KEY}"><![CDATA[{DATA}]]\x3e</Item>';
    x.reset = function() {
      o.request.a = [];
    };
    x.add = function(k, v) {
      x.a.push(x.s.replace("{KEY}", k).replace("{DATA}", v));
    };
    x.get = function() {
      var s = "";
      if (x.a.length > 0) {
        s = "<FXajax><Request>" + x.a.join("") + "</Request></FXajax>";
      }
      x.a = [];
      return s;
    };
  };
  o.add = function(k, v) {
    o.request.add(k, v);
  };
  o.cancel = function(action) {
    Fajax.xhrList[action].abort();
  };
  o.send = function(action, k, silent) {
    var data = o.request.get();
    if (k == 0) {
      k = null;
    }
    if (!k) {
      k = _fdk.cfg.page;
    }
    if (k == -1) {
      k = "";
    }
    var GET = [], l = decodeURIComponent(window.location.search.replace("?", "")).split("&");
    while (l.length > 0) {
      var pair = l.pop(), key = pair.substr(0, pair.indexOf("="));
      if (key != "k" && key != "i" && key != "p" && key != "m" && key != "d") {
        GET.push(pair);
      }
    }
    o.xhrList[action] = $.ajax({url:"?m=" + action + "-x" + (k ? "&k=" + k : "") + (GET.length > 0 ? "&" + GET.join("&") : ""), type:data.length > 0 ? "POST" : "GET", data:data, error:function(a, s, e) {
      console.log("Fajax::error " + s + " " + e);
      if (a.readyState == 0 || a.status == 0) {
        return;
      }
      if (!silent) {
        msg("danger", _fdk.lng.ajax.error + " " + s + " " + e.substr(0, e.indexOf("<")));
      }
    }, complete:function(a, s) {
      o.xhrList[action] = null;
      if (o.formSent) {
        $(".btn").removeAttr("disabled");
        o.formSent = null;
      }
      if (s == "success") {
        o.response.run(a.responseXML);
      }
    }});
  };
  o.response = new function() {
    var x = this;
    x.run = function(xml) {
      $(xml).find("Item").each(function() {
        var item = $(this), c = "", target = item.attr("target"), prop = item.attr("property"), text = item.text();
        switch(target) {
          case "document":
            window[target][prop] = text;
            break;
          case "call":
            var l = prop.split("."), ns = window;
            while (l.length > 0) {
              ns = ns[l.shift()];
            }
            ns.apply(this, text.split(","));
            break;
          default:
            switch(prop) {
              case "void":
                break;
              default:
                if (prop[0] == "$") {
                  $("#" + target)[prop.replace("$", "")](text);
                } else {
                  if (prop == "value") {
                    $("#" + target).val(text);
                  } else {
                    $("#" + target).attr(prop, text);
                  }
                }
              ;
            }
          ;
        }
      });
    };
  };
};
var isInit = false;
var isMobile = false;
var topBannerHeight = 0;
var topBannerMargin = 0;
function topBannerPosition() {
  if (topBannerHeight > 0) {
    return;
  }
  var valign = $(".top-image").data("valign"), bh = $(".top-image").height(), ih = $(".top-image img").height(), iy = 0;
  if (valign == "middle") {
    iy = (bh - ih) / 2;
  } else {
    if (valign == "bottom") {
      iy = bh - ih;
    }
  }
  iy += $(".top-image").data("margin");
  iy = iy > 0 ? 0 : iy + ih < bh ? bh - ih : iy;
  $(".top-image img").stop().animate({"margin-top":iy + "px"}, 100);
}
function loadSidebarPanel($panel) {
  Fajax.add("panel", $panel.data("src"));
  Fajax.send("sidebar-get", _fdk.cfg.page);
}
function boot() {
  var defaultLang = "cs";
  Lazy.load([_fdk.cfg.jsUrl + "i18n/_fdk.lng." + (_fdk.cfg.lang ? _fdk.cfg.lang : defaultLang) + ".js"], boot);
  if (isInit) {
    return;
  }
  isInit = true;
  var check = false;
  (function(a) {
    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 
    4))) {
      check = true;
    }
  })(navigator.userAgent || navigator.vendor || window.opera);
  isMobile = check;
  isMobile = true;
  $("img").unveil();
  $(".sidebar-content").each(function() {
    var $panel = $(this);
    var delay = parseInt($(this).data("delay"));
    if (delay > 0) {
      setTimeout(function() {
        loadSidebarPanel($panel);
      }, delay);
    } else {
      loadSidebarPanel(this);
    }
  });
  if (window.location.pathname != "/") {
    _fdk.fuup.fuga.service.url = window.location.pathname + _fdk.fuup.fuga.service.url;
  }
  $("#head-banner").on("click", function() {
    var imgh = $("#head-banner img").height();
    if (topBannerHeight == 0) {
      topBannerHeight = $(".top-image").css("height");
      topBannerMargin = $(".top-image img").css("marginTop");
      $(".top-image").animate({height:imgh + "px"}, 500);
      $(".top-image img").animate({marginTop:"0px"}, 500);
      if ($(this).attr("href").length > 0) {
        if ($("#topImageLink").length === 0) {
          $(".top-image").append('<div id="topImageLink" class="alert alert-info" style="top:' + (parseInt(topBannerHeight.replace("px", "")) - 60) + 'px;"><a href="' + $(this).attr("href") + '">' + $(this).attr("title") + "</a>");
        }
      }
    } else {
      $(".top-image").animate({height:topBannerHeight}, 500);
      $(".top-image img").animate({marginTop:topBannerMargin}, 500);
      topBannerHeight = 0;
    }
    return false;
  });
  if (!isMobile) {
    setTimeout(function() {
      if ($("#galeryFeed").length > 0) {
        Fajax.send("page-thumbs", _fdk.cfg.page);
      }
    }, 1E3);
  }
  if ($("#head-banner").length > 0) {
    $(window).resize(topBannerPosition).resize();
    $(".top-image img").on("load", topBannerPosition);
  }
  $('a[data-toggle="tab"]').on("shown.bs.tab", function(e) {
    var h = $(e.target).attr("href"), t = $(e.target).data("target");
    if (!t) {
      return;
    }
    if ($(t).is(":empty")) {
      $.ajax({type:"GET", url:h.replace("show", "show-x"), complete:function(a) {
        if (a.responseText) {
          $(t).html(a.responseText);
        }
      }});
    }
  });
  gaLoad();
  calendarInit();
  var w = $(window).width();
  if ($("#sidebar").length == 0) {
    $("body").addClass("bodySidebarOff");
  }
  $(".expand").autogrow();
  $(".opacity").bind("mouseenter", function() {
    $(this).fadeTo("fast", 1);
  }).bind("mouseleave", function() {
    $(this).fadeTo("fast", .5);
  });
  fajaxInit();
  fconfirmInit();
  switchOpen();
  $(".thumbnail-xs a").each(function() {
    $(this).addClass("history");
  });
  $(".mapThumbLink").bind("click", gooMapiThumbClick);
  if ($(".geoInput").length > 0 || $(".mapLarge").length > 0) {
    gooMapiInit();
  }
  History.Adapter.bind(window, "statechange", function() {
    var State = History.getState();
    History.log("statechange:", State.data, State.title, State.url);
    if (parseInt(State.data.i) > 0) {
      if (Fajax.xhrList["item-show"]) {
        History.log("cancel ajax:", "item-show");
        Fajax.cancel("item-show");
      }
      if (!isMobile) {
        $(".gallery").flickity("select", $("div[data-itemid='" + State.data.i + "']").index());
      }
      Fajax.action(State.data.action + "/i=" + State.data.i + "/0/" + State.data.eid);
    }
  });
  listen("history", "click", function(e) {
    var i = gup("i", e.currentTarget.href);
    History.pushState({action:"item-show", eid:$(e.target).attr("id"), i:i}, "Loading ...", "?i=" + i);
    return false;
  });
  slimboxInit();
  Fullscreen.init();
  fuupInit();
  datePickerInit();
  if (parseInt(_fdk.cfg.user) > 0) {
    ckedInit();
    $("#recipient").change(avatarfrominput);
    $("#selectAllCheckbox").change(function() {
      var checked = $(this).is(":checked");
      $(":checkbox").each(function() {
        if (checked) {
          $(this).attr("checked", "checked");
        } else {
          $(this).removeAttr("checked");
        }
      });
    });
    $("#ppinput").hide();
    $("#saction").change(function(evt) {
      if ($("#saction option:selected").attr("value") == "setpp") {
        $("#ppinput").show();
      } else {
        $("#ppinput").hide();
      }
    });
    $("#recipientList").change(function(evt) {
      var rec = [];
      $("#recipientList option:selected").each(function() {
        rec.push($(this).text());
      });
      if (rec) {
        $("#recipient").val(rec.join(",")).change();
      }
      avatarfrominput();
    });
    GaleryEdit.init(_fdk.cfg, _fdk.lng.galery);
    if (parseInt(_fdk.cfg.msgTi) > 0) {
      Msg.startPoll();
    }
    var perm = $("#accessSel");
    if (perm.length > 0) {
      perm.change(function() {
        var v = $(this).val();
        if (v == 0) {
          $("#rule1").show();
        } else {
          $("#rule1").hide();
        }
      }).change();
    }
  }
}
function recaptchaStart() {
  if (!Lazy.load(["http://www.google.com/recaptcha/api/js/recaptcha_ajax.js"], recaptchaStart)) {
    return;
  }
  Recaptcha.create("6LexXNkSAAAAAE_BDWQHhapdx-XPHItdWgBvDTSm", "recaptchaBox", {tabindex:3});
}
function jUIInit() {
  if (!Lazy.load(_fdk.load.ui, jUIInit)) {
    return;
  }
  datePickerInit();
  ckedInit();
  fajaxInit();
  fconfirmInit();
  gooMapiInit();
  fuupInit();
  slimboxInit();
  GaleryEdit.init(_fdk.cfg, _fdk.lng.galery);
  $(".expand").autogrow();
}
function gooMapiInit() {
  if (!Lazy.load(_fdk.load.goomapi, gooMapiInit)) {
    return;
  }
  GooMapi.init(_fdk.cfg, _fdk.lng.goomapi);
}
var gooMapiThumbClickElement = null;
function gooMapiThumbClick() {
  $(this).unbind("click", gooMapiThumbClick);
  if (!gooMapiThumbClickElement) {
    gooMapiThumbClickElement = this;
  }
  if (!Lazy.load(_fdk.load.goomapi, gooMapiInit)) {
    return;
  }
  $(gooMapiThumbClickElement).click();
  gooMapiThumbClickElement = null;
}
function ckedInit() {
  if ($(".markitup").length == 0) {
    return;
  }
  if (!Lazy.load(_fdk.load.richta, ckedInit)) {
    return;
  }
  tinymce.remove();
  tinymce.init({selector:".markitup", menubar:false, toolbar:"save | undo redo | styleselect | bold italic | link unlink image | alignleft aligncenter alignright alignjustify bullist blockquote | visualblocks code fullscreen", mode:"textareas", toolbar_items_size:"small", save_onsavecallback:function(a) {
    var form = $("#" + a.id)[0].form;
    console.log("TinyMCE Save");
    Fajax.form(null, form);
    return false;
  }, plugins:["autoresize", "autosave save", "advlist autolink lists link image anchor", "searchreplace visualblocks code fullscreen", "media contextmenu paste"]});
}
function calendarInit() {
  if ($("#calendar-inline").length == 0) {
    return;
  }
  if (!Lazy.load(_fdk.load.ui, calendarInit)) {
    return;
  }
  var date = $("#calendar-inline").data("dateset");
  var viewMode = $("#calendar-inline").data("minviewmode");
  var getDate = gup("date", window.location.href);
  if (getDate) {
    if (getDate.length == 4) {
      getDate += "-01-01";
    } else {
      if (getDate.length == 7) {
        getDate += "-01";
      }
    }
    date = getDate;
  }
  calendarDate = new Date(date);
  $("#calendar-inline").on("show", function() {
    $("th.datepicker-switch").on("click", calendarInlineInvalidate);
    $("th.next").on("click", calendarInlineInvalidate);
    $("th.prev").on("click", calendarInlineInvalidate);
    calendarInlineInvalidate();
  }).datepicker({date:date, language:"cs", minViewMode:viewMode ? viewMode : 0, weekStart:1}).on("changeYear", calendarInlineInvalidate).on("changeDate", function(e) {
    var viewMode = calendarViewMode();
    var cat = gup("c", window.location.href);
    var uri = "?k=" + _fdk.cfg.page + (cat ? "&c=" + cat : "") + "&date=" + e.date.getFullYear() + (viewMode < 2 ? "-" + ("0" + (e.date.getMonth() + 1)).slice(-2) : "") + (viewMode < 1 ? "-" + ("0" + e.date.getDate()).slice(-2) : "");
    window.location.replace(uri);
  }).on("changeMonth", calendarInlineInvalidate);
  if (date) {
    var d = date.split("-"), da = new Date(parseInt(d[0]), parseInt(d[1]) - 1, parseInt(d[2]));
    $("#calendar-inline").datepicker("update", da);
  }
}
function calendarViewMode() {
  var cal = $("#calendar-inline")[0];
  if ($(".datepicker-months", cal).css("display") == "block") {
    return 1;
  }
  if ($(".datepicker-years", cal).css("display") == "block") {
    return 2;
  }
  return 0;
}
function calendarInlineInvalidate(e) {
  if (e && e.date) {
    calendarDate = e.date;
  }
  if (calendarIsInvalid) {
    return;
  }
  calendarIsInvalid = true;
  setTimeout(calendarInlineUpdate, 10);
}
var calendarDate;
var calendarFirstInit = true;
var calendarDataLoaded = {};
var calendarIsInvalid = false;
function calendarInlineUpdate() {
  var year, month;
  calendarIsInvalid = false;
  var $cal = $("#calendar-inline"), viewMode = calendarViewMode();
  if (!calendarFirstInit && (viewMode == 2 || calendarDate)) {
    if (calendarDate) {
      year = calendarDate.getFullYear();
      month = parseInt(calendarDate.getMonth()) + 1;
    }
    var loading = viewMode + "-" + (viewMode < 2 ? year + (viewMode < 1 ? "-" + month : "") : "");
    if (!calendarDataLoaded[loading]) {
      Fajax.add("loading", loading);
      if (viewMode) {
        Fajax.add("viewmode", viewMode);
      }
      if (viewMode < 1) {
        Fajax.add("month", month);
      }
      if (viewMode < 2) {
        Fajax.add("year", year);
      }
      Fajax.send("calendar-show", "");
    } else {
      calendarLoading = null;
    }
  }
  calendarFirstInit = false;
  var dayEvents = $(".event", $cal[0]);
  $("td.day", $cal[0]).each(function() {
    $(this).removeClass("active");
  });
  $("span.month", $cal[0]).each(function() {
    $(this).removeClass("active");
  });
  $("span.year", $cal[0]).each(function() {
    $(this).removeClass("active");
  });
  dayEvents.each(function() {
    $("span", this).remove();
    var ed = String($(this).data("date"));
    var tooltip = $(this).html();
    if (viewMode == 2) {
      $("span.year", $cal[0]).each(function() {
        $(this).removeClass("old");
        $(this).removeClass("new");
        if ($(this).html() == ed) {
          $(this).addClass("active");
          $(this).attr("title", tooltip);
        }
      });
    } else {
      if (viewMode == 1) {
        var thisYear = $(".datepicker-switch", $cal[0]).html().substr(-4);
        if (ed.indexOf(thisYear) == 0) {
          var edMonth = parseInt(ed.substr(5));
          var monthIndex = 1;
          $("span.month", $cal[0]).each(function() {
            if (monthIndex == edMonth) {
              $(this).addClass("active");
              $(this).attr("title", tooltip);
            }
            monthIndex++;
          });
        }
      } else {
        var date = calendarDate ? calendarDate : $cal.datepicker("getDate");
        var thisDate = date.getFullYear() + "-" + ("0" + (date.getMonth() + 1)).slice(-2) + "-";
        if (ed.indexOf(thisDate) == 0) {
          $("td.day", $cal[0]).each(function() {
            var thisDay = parseInt($(this).html());
            var edDay = parseInt(ed.substr(8));
            if (thisDay == edDay && !$(this).hasClass("new") && !$(this).hasClass("old")) {
              $(this).addClass("active");
              $(this).attr("title", tooltip);
            }
          });
        }
      }
    }
  });
}
function datePickerInit() {
  if ($(".date").length == 0) {
    return;
  }
  if (!Lazy.load(_fdk.load.ui, datePickerInit)) {
    return;
  }
  $(".date").datepicker({todayBtn:true, weekStart:1, autoclose:true, language:"cs", calendarWeeks:true, todayHighlight:true, format:"dd.mm.yyyy"});
}
function calendarLoaded(loading) {
  calendarDataLoaded[loading] = true;
}
function calendarUpdate(data) {
  data = data.split("\n");
  for (var i in data) {
    var id = $(data[i]).data("id");
    if ($("#calendar-inline div.event[data-id='" + id + "']").length == 0) {
      $("#calendar-inline").append(data[i]);
    }
  }
  calendarInlineInvalidate();
}
function slimboxInit() {
  if ($("a[rel^='lightbox']").length == 0 && $(".fotomashup").length == 0) {
    return;
  }
  if (!Lazy.load(_fdk.load.colorbox, slimboxInit)) {
    return;
  }
  $(".fotomashup a").colorbox({rel:"grp1", title:function() {
    var url = $(this).attr("href");
    return '<a href="' + url + '">Album ' + $(this).attr("title") + "</a>";
  }, href:function() {
    return $("img", this).data("image");
  }, scalePhotos:true, maxHeight:"100%", maxWidth:"100%"});
  $("a[rel^='lightbox']").colorbox({scalePhotos:true, maxHeight:"100%", maxWidth:"100%"});
}
function fuupInit() {
  if ($(".fuup").length == 0) {
    return;
  }
  if (!Lazy.load(_fdk.load.swf, fuupInit)) {
    return;
  }
  $(".fuup").each(function(i) {
    var id = $(this).attr("id"), fuupConf = $.base64.encode(JSON.stringify(_fdk.fuup[id]));
    swfobject.embedSWF(_fdk.cfg.assUrl + "load.swf", id, "100", "25", "10.0.12", _fdk.cfg.assUrl + "expressInstall.swf", {file:_fdk.cfg.assUrl + "Fuup.swf", config:fuupConf, containerId:id}, {menu:"false", scale:"noScale", allowFullscreen:"true", allowScriptAccess:"always", bgcolor:"", wmode:"transparent"});
  });
}
function friendRequestInit(text) {
  $("#friendrequest").remove();
  $("#sysmsgBox").after(text);
  $("#friendrequest").removeClass("hidden").show("slow");
  fajaxInit();
  $("#cancel-request").off("click").on("click", function(event) {
    remove("friendrequest");
    return false;
  });
}
function fajaxInit() {
  Fajax.init();
}
function fconfirmInit(event) {
  $(".confirm").each(function() {
    var pf = false;
    if (this.form) {
      pf = $(this.form).hasClass("fajaxform");
    }
    if (!$(this).hasClass("fajaxa") && !pf) {
      $(this).bind("click", onConfirm);
    }
  });
}
function onConfirm(e) {
  if (!confirm($(e.currentTarget).attr("title"))) {
    preventAjax = true;
    e.preventDefault();
  }
}
function shiftTo(y) {
  if (!y) {
    y = 0;
  }
  $(window).scrollTop(y);
}
function scrollToBottom(id) {
  $("#" + id).animate({scrollTop:$("#" + id)[0].scrollHeight}, 1E3);
}
function enable(id) {
  $("#" + id).removeAttr("disabled");
}
function remove(id) {
  $("#" + id).remove();
}
function switchOpen() {
  $(".switchOpen").click(function() {
    $("#" + this.rel).toggleClass("hidden");
    return false;
  });
}
function listen(c, e, f) {
  $("." + c).unbind(e, f).bind(e, f);
}
function gup(n, url) {
  n = n.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
  var r = new RegExp("[\\?&|]" + n + "=([^&#|]*)"), res = r.exec(url);
  return res === null ? 0 : res[1];
}
var msgId = 1;
function msg(type, text) {
  $("#sysmsgBox").append('<div id="sysmsg' + msgId + '" class="alert alert-' + type + ' alert-dismissable"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>' + text + "</div>");
  $("#sysmsg" + msgId).delay("10000").hide("slow");
  msgId++;
}
function redirect(dir) {
  window.location.replace(dir);
}
function avatarfrominput(evt) {
  Fajax.add("username", $("#recipient").val());
  Fajax.add("call", "fajaxInit");
  Fajax.send("post-avatarfrominput", "");
}
function fuupUploadComplete(k, v) {
  if (k == "error") {
    alert(_fdk.lng.galery[v]);
  }
  if (k != "complete") {
    return;
  }
  var i = $("#i").attr("value");
  if (i > 0) {
    Fajax.add("i", i);
  }
  Fajax.add("call", "jUIInit");
  Fajax.send("item-image", _fdk.cfg.page);
}
function tempStoreDeleteInit() {
  $("#tempStoreButt").click(function(e) {
    $("#imageHolder").html("");
    Fajax.send("item-tempStoreFlush", _fdk.cfg.page);
    e.preventDefault();
    return false;
  });
}
var Msg = new function() {
  var o = this;
  o.getData = function() {
    var p = gup("p", window.location.href), l = [], xs = [];
    $(".fitem.unread.sent").each(function() {
      l.push($(this).attr("id").replace("mess", ""));
    });
    $(".msg-xs").each(function() {
      xs.push($(this).attr("id").replace("messxs", ""));
    });
    if (l.length > 0) {
      Fajax.add("unreadedSent", l.join(","));
    }
    if (xs.length > 0) {
      Fajax.add("xsShow", xs.join(","));
    }
    if (_fdk.cfg.page == "fpost" && p > 0) {
      Fajax.add("p", p);
    }
    return Fajax.request.get();
  };
  o.startPoll = function() {
    $.PeriodicalUpdater("?m=post-poll-x&k=" + _fdk.cfg.page, {data:o.getData, minTimeout:_fdk.cfg.msgTi / 2, maxTimeout:_fdk.cfg.msgTi, multiplier:2}, function(remoteData, success, xhr, handle) {
      Fajax.response.run(remoteData);
    });
  };
  o.chatInit = function() {
    $(".msg-text").off("keypress").on("keypress", function(e) {
      if (e.which == 13) {
        $("#msgBtnSubmit").click();
        e.preventDefault();
        $("#msgList").append('<div class="msg-xs" id="messxs0">' + $("#msgText").val() + "</div>");
        $("#msgText").val("");
        scrollToBottom("msgList");
      }
    });
  };
};
(function($) {
  $.fn.autogrow = function(options) {
    this.filter("textarea").each(function() {
      var $this = $(this), minHeight = $this.height(), u = function() {
        var pt = parseInt($this.css("padding-top").replace("px", "")), pb = parseInt($this.css("padding-bottom").replace("px", "")), lh = parseInt($this.css("line-height").replace("px", "")), h = $this.height(), sh = $this.prop("scrollHeight") - (pt + pb);
        if (sh > h) {
          $this.css("height", sh + lh * 2);
        }
      };
      $this.off("change", u).on("keydown", u).change(u).keydown(u).change();
    });
    return this;
  };
})(jQuery);
function indexOf(arr, obj, start) {
  for (var i = start || 0;i < arr.length;i++) {
    if (arr[i] == obj) {
      return i;
    }
  }
  return -1;
}
function gaLoad() {
  var ga = document.createElement("script");
  ga.type = "text/javascript";
  ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0];
  s.parentNode.insertBefore(ga, s);
}
(function($) {
  $.fn.pop = function() {
    var top = this.get(-1);
    this.splice(this.length - 1, 1);
    return top;
  };
  $.fn.shift = function() {
    var bottom = this.get(0);
    this.splice(0, 1);
    return bottom;
  };
})(jQuery);
(function($) {
  $.fn.funveil = function(threshold, callback) {
    var $w = $(window), th = threshold || 0, retina = window.devicePixelRatio > 1, attrib = retina ? "data-lazy-retina" : "data-lazy", images = this, loaded;
    $(this).height($w.height()).width("100%").addClass("funveil");
    this.one("unveil", function() {
      var source = this.getAttribute(attrib);
      source = source || this.getAttribute("data-src");
      if (source) {
        this.setAttribute("src", source);
        if (typeof callback === "function") {
          callback.call(this);
        }
      }
    });
    function unveil() {
      var inview = images.filter(function() {
        var $e = $(this);
        if ($e.is(":hidden")) {
          return;
        }
        var wt = $w.scrollTop(), wb = wt + $w.height(), et = $e.offset().top, eb = et + $e.height();
        return eb >= wt - th && et <= wb + th;
      });
      loaded = inview.trigger("unveil");
      images = images.not(loaded);
    }
    $w.on("scroll.unveil resize.unveil lookup.unveil", unveil);
    unveil();
    return this;
  };
})(window.jQuery || window.Zepto);
var Resize = new function() {
  var o = this;
  o.t = 0;
  o.cw = 0;
  o.ch = 0;
  o.flktySelected = null;
  o.flktyTimeout = 0;
  o.queue = null;
  o.lazyLoad = function(img) {
    $img = $(img);
    if (!$(img).data("lazy")) {
      o.nextQueue();
      return;
    }
    $(img).attr("src", $(img).data("lazy"));
    $(img).data("lazy", null);
  };
  o.isQueue = false;
  o.doQueue = function() {
    o.queue = $("img.gallery-cell-image");
    o.queue.shift();
    o.lazyLoad(o.queue.pop());
    if (o.queue.length > 0) {
      o.isQueue = true;
    }
  };
  o.nextQueue = function() {
    if (!o.isQueue) {
      return;
    }
    if (o.queue.length === 0) {
      o.isQueue = false;
      return;
    }
    o.lazyLoad(o.queue.shift());
  };
  o.unveilInit = function() {
    $(".gallery-cell-image").funveil(500);
  };
  o.currentIndex = 0;
  o.numCell = 0;
  o.init = function() {
    if (isMobile) {
      $(window).on("scroll", function() {
        clearTimeout($.data(this, "scrollTimer"));
        $.data(this, "scrollTimer", setTimeout(function() {
          console.log("scroll stopped");
          var index = 0;
          $(".gallery-cell").each(function() {
            $i = $(this), $w = $(window);
            var docViewTop = $w.scrollTop();
            var docViewBottom = docViewTop + $w.height();
            var elemTop = $i.offset().top;
            var elemBottom = elemTop + $i.height();
            if (elemBottom >= docViewTop) {
              o.currentIndex = index;
              return false;
            }
            index++;
          });
        }, 250));
      });
      $("#galleryNext").on("click", function() {
        if (o.numCell === 0) {
          o.numCell = $("div.gallery-cell").length;
        }
        o.currentIndex++;
        if (o.currentIndex >= o.numCell) {
          o.currentIndex = 0;
        }
        var i = $($("div.gallery-cell")[o.currentIndex]);
        if (Fullscreen.isFullscreen) {
          $(".gallery").prepend(i);
          o.lazyLoad($("img", i));
          var ni = $($("div.gallery-cell")[o.currentIndex + 1]);
          if (ni) {
            o.lazyLoad($("img", ni));
          }
        } else {
          $("html, body").animate({scrollTop:i.offset().top - ($(window).height() - i.height()) / 2}, 600);
        }
        var itemId = i.data("itemid");
        History.pushState({action:"item-show", eid:itemId, i:itemId}, "Loading ...", "?i=" + itemId);
      });
      $("#galleryPrev").on("click", function() {
        if (o.numCell === 0) {
          o.numCell = $("div.gallery-cell").length;
        }
        o.currentIndex--;
        if (o.currentIndex < 0) {
          o.currentIndex = 0;
        }
        var i = $($("div.gallery-cell")[o.currentIndex]);
        if (Fullscreen.isFullscreen) {
          $(".gallery").prepend(i);
          o.lazyLoad($("img", i));
        } else {
          $("html, body").animate({scrollTop:i.offset().top - ($(window).height() - i.height()) / 2}, 600);
        }
        var itemId = i.data("itemid");
        History.pushState({action:"item-show", eid:itemId, i:itemId}, "Loading ...", "?i=" + itemId);
      });
    }
    $(window).resize(o.on).resize();
    var firstImg = $("img.gallery-cell-image:first")[0];
    if (firstImg.complete) {
      if (isMobile) {
        o.unveilInit();
      } else {
        setTimeout(o.doQueue, 500);
      }
    } else {
      $(firstImg).on("load", function() {
        if (isMobile) {
          o.unveilInit();
        } else {
          setTimeout(o.doQueue, 500);
        }
      });
    }
    $(".gallery img").load(function() {
      var w = $(window), ww = w.width(), wh = w.height();
      imgResizeToFit($(this), Fullscreen.isFullscreen ? ww : $("#fullscreenBox").width(), wh - (Fullscreen.isFullscreen ? 0 : 0), Fullscreen.isFullscreen);
      ImgNext.hud();
      if (o.isQueue && o.queue.length > 0) {
        o.nextQueue();
      }
    }).error(function() {
      var stamp = (new Date).getTime();
      var url = $(this).attr("src") + "?" + stamp;
      $(this).attr("src", url);
      console.log("Error Loading Image " + url);
    });
    $(".js-flickity").on("cellSelect", function() {
      var flkty = $(".gallery").data("flickity");
      if (!flkty) {
        return;
      }
      var cell = flkty.selectedElement, changeState = true;
      if (!o.flktySelected) {
        changeState = false;
      }
      if (o.flktySelected == cell) {
        changeState = false;
      }
      o.flktySelected = cell;
      if (!changeState) {
        return;
      }
      var img = $("img", cell);
      if ($(img).data("lazy")) {
        $(img).attr("src", $(img).data("lazy"));
        $(img).data("lazy", null);
      }
      if (o.flktyTimeout) {
        clearTimeout(o.flktyTimeout);
      }
      o.flktyTimeout = setTimeout(function() {
        var itemId = $(cell).data("itemid");
        History.pushState({action:"item-show", eid:itemId, i:itemId}, "Loading ...", "?i=" + itemId);
      }, 1E3);
    });
  };
  o.force = function() {
    o.cw = o.ch = 0;
    o.on();
  };
  o.on = function() {
    var w = $(window), ww = w.width(), wh = w.height();
    if (ww != o.cw || wh != o.ch) {
      o.cw = ww;
      o.ch = wh;
      ImgNext.hud();
    }
    $(".gallery img").each(function(index) {
      imgResizeToFit($(this), Fullscreen.isFullscreen ? ww : $("#fullscreenBox").width(), wh - (Fullscreen.isFullscreen ? 0 : 0), Fullscreen.isFullscreen, Fullscreen.isFullscreen);
    });
  };
};
var ImgNext = new function() {
  var o = this;
  o.r = false;
  o.i = null;
  o.il = [];
  o.p = null;
  o.next = [];
  o.nav = [];
  o.top = 0;
  o.xhr = null;
  o.thumbsInit = function() {
    $(".thumbnail-xs a").each(function() {
      $(this).on("click", function(e) {
        var i = gup("i", e.currentTarget.href);
        History.pushState({action:"item-show", eid:$(e.target).attr("id"), i:i}, "Loading ...", "?i=" + i);
        var i = $("#fullscreenBox");
        $("html, body").animate({scrollTop:i.offset().top - ($(window).height() - i.height()) / 2}, 600);
        return false;
      });
    });
  };
  o.init = function() {
    if (!o.r) {
      o.r = true;
      o.i = $("#detailFoto");
      o.i.bind("load", o.loaded);
      o.p = $(".showProgress");
    }
  };
  o.start = function(i) {
    o.init();
    o.i.show();
    var h = o.p.height();
    o.p.css("height", (h > 0 ? h : $(window).height()) + "px");
    o.i.removeAttr("src");
    if (o.next[i]) {
      History.log("Galery showing:", i);
      o.i.attr("src", o.next[i]);
    } else {
      o.i.css("height", "0px");
    }
    if (o.nav[i]) {
      var $nextBtn = $("#nextButt"), $prevBtn = $("#prevButt"), nextHref = $nextBtn.attr("href"), prevHref = $prevBtn.attr("href");
      nextHref = nextHref.substr(0, nextHref.indexOf("i=") + 2) + o.nav[i][0];
      prevHref = prevHref.substr(0, prevHref.indexOf("i=") + 2) + o.nav[i][1];
      $nextBtn.attr("href", nextHref);
      $prevBtn.attr("href", prevHref);
    }
    return false;
  };
  o.loaded = function() {
    return;
    o.init();
    o.i.show();
    o.next[o.i.data("i")] = o.i.attr("src");
    Resize.force();
    if (!Fullscreen.isFullscreen) {
      $("html, body").animate({scrollTop:o.i.offset().top - ($(window).height() - o.i.height()) / 2}, 600);
    }
    Slideshow.next();
  };
  o.hud = function() {
    var $fb = $("#fullscreenBox");
    $fb.css("height", "").css("width", "");
    var w = $fb.width(), h = $fb.height();
    h = $(window).height();
    var maxHeight = 0;
    $(".gallery-cell img").each(function() {
      var h = $(this).height();
      if (h > maxHeight) {
        maxHeight = h;
      }
    });
    if (!isMobile) {
      $(".gallery").width(w).height(maxHeight);
    }
    History.log("ImgNext.hud", w + "x" + h);
  };
  o.xhrHand = function(currentId, nextId, prevId, currentUrl, nextUrl) {
    o.init();
    o.nav[currentId] = [nextId, prevId];
    if (currentUrl && currentUrl != o.i.attr("src")) {
      o.i.attr("src", currentUrl).data("i", currentId);
    }
    if (nextUrl) {
      $("body").append('<img id="imgNextLoader' + nextId + '" class="noscreen" />');
      o.il[nextId] = $("#imgNextLoader" + nextId).load(o.preloaded);
      o.il[nextId].attr("src", nextUrl).data("i", nextId);
    }
  };
  o.preloaded = function(e) {
    var $img = $(e.target);
    o.next[$img.data("i")] = $img.attr("src");
  };
};
var Slideshow = new function() {
  var o = this;
  o.on = false;
  o.t = 0;
  o.s = 5;
  o.f = function() {
    if (o.on) {
      if (!isMobile) {
        $(".gallery").flickity("next");
      } else {
        $("#galleryNext").click();
      }
      o.next();
    }
  };
  o.toggle = function() {
    o.on = !o.on;
    o.next();
  };
  o.next = function() {
    clearTimeout(o.t);
    if (o.on) {
      o.t = setTimeout(o.f, o.s * 1E3);
    }
  };
};
var Fullscreen = new function() {
  var o = this;
  o.el = null;
  o.tool = null;
  o.state = null;
  o.isFullscreen = false;
  o.d = $(document.documentElement);
  o.w = $(window);
  o.key = function(e) {
    if (e.keyCode == 27) {
      o.toggle();
    }
    if (e.keyCode == 32) {
      $("#nextButt").click();
    }
  };
  o.init = function() {
    o.el = $("#fullscreenBox");
    if (o.el.length === 0) {
      return;
    }
    listen("aFullscreen", "click", o.toggle);
    $("#fullscreenLeave").click(o.toggle);
    $("#prevButt").click(function() {
      return false;
    });
    $("#nextButt").click(function() {
      return false;
    });
    o.tool = $("#photoToolbar");
    var fs = $("#aSlideshow img");
    fs.click(function() {
      fs.attr("src", fs.attr("src").replace(Slideshow.on ? "stop" : "play", Slideshow.on ? "play" : "stop"));
      Slideshow.toggle();
      return false;
    });
    Resize.init();
  };
  o.toggle = function() {
    if (!o.isFullscreen) {
      o.onEnter();
    } else {
      o.onExit();
    }
    return false;
  };
  o.onEnter = function() {
    o.isFullscreen = true;
    o.state = {y:o.w.scrollTop()};
    o.d.bind("keyup", o.key);
    o.el.addClass("fullscreen");
    o.w.scrollTop(0).scrollLeft(0);
    $("body").css("overflow", "hidden");
    Resize.force();
  };
  o.onExit = function() {
    o.isFullscreen = false;
    o.d.unbind("keyup", o.key);
    o.el.removeClass("fullscreen");
    $("body").css("overflow", "auto");
    if (o.state.y > 0) {
      o.w.scrollLeft(o.state.y);
    }
    o.state = null;
    Resize.force();
  };
};
function imgResizeToFit(img, hw, hh, isFullscreen, upScale) {
  img.removeAttr("height").removeAttr("width").css("width", "auto").css("height", "auto").css("top", "").css("left", "").css("position", "").css("margin-top", "");
  var iw = img.width(), ih = img.height(), r = Math.min(hw / iw, hh / ih), tw = Math.round(r * iw), th = Math.round(r * ih);
  if (!upScale && (tw > iw || th > ih)) {
    tw = iw;
    th = ih;
  }
  if (!upScale && isFullscreen && hh > ih) {
    img.css("margin-top", (hh - ih) / 2);
  }
  img.css("height", Math.round(th)).css("width", Math.round(tw));
}
var GaleryEdit = new function() {
  var o = this;
  o.uploadStatus = "";
  o.numToUpload = 0;
  o.cfg = {};
  o.lng = {};
  o.init = function(cfg, lng) {
    o.cfg = cfg;
    o.lng = lng;
    $("#uploadButt").off("click").click(function() {
      $("#fuga")[0].fuupGateIn("upload");
    });
    $("#cancelButt").off("click").click(function() {
      $("#fuga")[0].fuupGateIn("cancel");
    });
    $("#removeAllButt").off("click").click(function() {
      $("#fuga")[0].fuupGateIn("removeAll");
    });
    listen("delete-galery", "click", GaleryEdit.del);
  };
  o.updateControls = function() {
    if (o.uploadStatus == "statusBusy") {
      $("#uploadButt").attr("disabled", "disabled");
      $("#cancelButt").removeAttr("disabled");
      $("#removeAllButt").attr("disabled", "disabled");
    } else {
      $("#cancelButt").attr("disabled", "disabled");
      if (o.numToUpload > 0) {
        $("#uploadButt").removeAttr("disabled");
        $("#removeAllButt").removeAttr("disabled");
      } else {
        $("#uploadButt").attr("disabled", "disabled");
        $("#removeAllButt").attr("disabled", "disabled");
      }
    }
  };
  o.check = function(k, v) {
    console.log("FUUP::" + k + " '" + v + "'");
    switch(k) {
      case "imageUploaded":
        Fajax.send("page-fuup", o.cfg.page);
        break;
      case "imageNum":
        o.numToUpload = parseInt(v);
        o.updateControls();
        break;
      case "status":
        o.uploadStatus = v;
        o.updateControls();
        if (v == "statusReady" && $("#uploadControlsHeading").length == 0) {
          $('<h2 id="uploadControlsHeading">' + o.lng.selectFiles + "</h2>").hide().appendTo("#uploadControls").slideDown("slow");
        }
        break;
      case "error":
        alert(o.lng[v]);
        break;
    }
  };
  o.del = function(e) {
    var f = Fajax, i = gup("d", $(this).attr("href")).split("=").pop();
    if (confirm($(this).attr("title"))) {
      f.add("item", i);
      f.send("item-delete");
      f.formStop = true;
      $("#i" + i).hide("slow", function() {
        $("#i" + i).remove();
      });
    }
    return false;
  };
};
(function($) {
  $.PeriodicalUpdater = function(url, options, callback) {
    if (!options) {
      options = {};
    }
    var settings = jQuery.extend(true, {url:url, cache:false, methodLight:"GET", methodLoaded:"POST", data:"", minTimeout:1E3, maxTimeout:64E3, multiplier:2, maxCalls:0, autoStop:0, autoStopCallback:null, cookie:false, runatonce:false, verbose:0}, options);
    var pu_log = function(msg, lvl) {
      lvl = lvl || 1;
      if (settings.verbose >= lvl) {
        try {
          console.log(msg);
        } catch (err) {
        }
      }
    };
    var timer = null;
    var remoteData = null;
    var prevData = null;
    var timerInterval = settings.minTimeout;
    var maxCalls = settings.maxCalls;
    var autoStop = settings.autoStop;
    var calls = 0;
    var noChange = 0;
    var originalMaxCalls = maxCalls;
    var reset_timer = function(interval) {
      $(function() {
        if (timer !== null) {
          clearTimeout(timer);
        }
        timerInterval = interval;
        pu_log("resetting timer to " + timerInterval + ".", 2);
        if (settings.cookie && $.cookie) {
          $.cookie(settings.cookie.name, timerInterval, settings.cookie);
        }
        timer = setTimeout(getdata, timerInterval);
      });
    };
    var boostPeriod = function() {
      if (settings.multiplier > 1) {
        var before = timerInterval;
        timerInterval = timerInterval * settings.multiplier;
        if (timerInterval > settings.maxTimeout) {
          timerInterval = settings.maxTimeout;
        }
        pu_log("adjusting timer from " + before + " to " + timerInterval + ".", 2);
      }
      reset_timer(timerInterval);
    };
    if (settings.cookie) {
      if (typeof settings.cookie == "boolean") {
        settings.cookie = {name:url};
      } else {
        if (typeof settings.cookie != "object") {
          settings.cookie = {name:settings.cookie.toString()};
        }
      }
      if (!settings.cookie.name) {
        settings.cookie.name = url;
      }
      if (!$.cookie) {
        $.getScript("https://raw.github.com/carhartl/jquery-cookie/master/jquery.cookie.js", function() {
          pu_log("Loaded the cookies handler script", 2);
          if ($.cookie(settings.cookie.name)) {
            pu_log("Not runatonce and have cookie value", 2);
            reset_timer($.cookie(settings.cookie.name));
          } else {
            pu_log("Not runatonce, but no cookie value", 2);
            reset_timer(timerInterval);
          }
        }).fail(function() {
          pu_log("Could not load the cookies handler script", 1);
          reset_timer(timerInterval);
        });
      } else {
        if ($.cookie(settings.cookie.name)) {
          reset_timer($.cookie(settings.cookie.name));
        }
      }
    }
    var ajaxSettings = jQuery.extend(true, {}, settings);
    if (settings.type && !ajaxSettings.dataType) {
      ajaxSettings.dataType = settings.type;
    }
    if (settings.sendData) {
      ajaxSettings.data = settings.sendData;
    }
    ajaxSettings.ifModified = true;
    function getdata(force) {
      var toSend = jQuery.extend(true, {}, ajaxSettings);
      if (typeof options.data == "function") {
        toSend.data = options.data();
      }
      if (toSend.data) {
        if (typeof toSend.data == "number") {
          toSend.data = toSend.data.toString();
        }
      }
      toSend.type = toSend.data ? settings.methodLoaded : settings.methodLight;
      if (force || maxCalls === 0) {
        pu_log("Sending data");
        $(function() {
          $.ajax(toSend);
        });
      } else {
        if (maxCalls > 0 && calls < maxCalls) {
          pu_log("Sending data because we are at " + calls + " of " + maxCalls + " calls");
          $(function() {
            $.ajax(toSend);
          });
          calls++;
        } else {
          if (maxCalls == -1) {
            pu_log("NOT sending data: stop has been called", 1);
          } else {
            pu_log("NOT sending data: maximum number of calls reached - " + maxCalls, 1);
          }
        }
      }
    }
    var handle = {boostTimer:function(mag) {
      if (mag > 0 && mag != 1) {
        pu_log("Boosting timer by a factor of " + mag);
        timerInterval = timerInterval * mag;
      } else {
        pu_log("Cannot boost timer by a factor of " + mag);
      }
      reset_timer(timerInterval);
      return;
    }, restart:function(newInterval) {
      pu_log("Calling restart");
      maxCalls = originalMaxCalls;
      calls = 0;
      noChange = 0;
      reset_timer(newInterval || timerInterval);
      return;
    }, send:function() {
      pu_log("Explicit call to send");
      getdata(true);
      return;
    }, stop:function() {
      pu_log("Calling stop");
      maxCalls = -1;
      if (settings.cookie && $.cookie) {
        $.cookie(settings.cookie.name, null, settings.cookie);
      }
      return;
    }};
    ajaxSettings.success = function(data) {
      pu_log("Successful run! (In 'success')", 2);
      remoteData = data;
    };
    ajaxSettings.complete = function(xhr, success) {
      pu_log("Status of call: " + success + " (In 'complete')", 2);
      if (success == "success" || success == "notmodified") {
        var rawData = $.trim(xhr.responseText);
        if (prevData == rawData) {
          if (autoStop > 0) {
            noChange++;
            if (noChange == autoStop) {
              handle.stop();
              if (settings.autoStopCallback) {
                settings.autoStopCallback(noChange);
              }
              return;
            }
          }
          boostPeriod();
        } else {
          noChange = 0;
          reset_timer(settings.minTimeout);
          prevData = rawData;
          if (settings.cookie) {
            $.cookie(settings.cookie.name, prevData, settings.cookie);
          }
          if (remoteData === null) {
            remoteData = rawData;
          }
          if (ajaxSettings.dataType === "json" && typeof remoteData === "string" && success == "success") {
            remoteData = JSON.parse(remoteData);
          }
          if (settings.success) {
            settings.success(remoteData, success, xhr, handle);
          }
          if (callback) {
            callback(remoteData, success, xhr, handle);
          }
        }
      }
      if (settings.complete) {
        settings.complete(xhr, success);
      }
      remoteData = null;
    };
    ajaxSettings.error = function(xhr, textStatus) {
      pu_log("Error message: " + textStatus + " (In 'error')", 2);
      if (textStatus != "notmodified") {
        prevData = null;
        if (settings.cookie) {
          $.cookie(settings.cookie.name, null, settings.cookie);
        }
        reset_timer(settings.minTimeout);
      }
      if (settings.error) {
        settings.error(xhr, textStatus);
      }
    };
    if (settings.runatonce) {
      pu_log("Executing a call immediately", 1);
      getdata(true);
    } else {
      if ($.cookie && $.cookie(settings.cookie.name)) {
      } else {
        pu_log("Enqueing a the call for after " + timerInterval, 1);
        reset_timer(timerInterval);
      }
    }
    return handle;
  };
  $.fn.PeriodicalUpdater = function(url, options, callback) {
    var me = this;
    return $.PeriodicalUpdater(url, options, function() {
      return callback.apply(me, arguments);
    });
  };
})(jQuery);
(function($) {
  $.fn.unveil = function(threshold, callback) {
    var $w = $(window), th = threshold || 0, retina = window.devicePixelRatio > 1, attrib = retina ? "data-src-retina" : "data-src", images = this, loaded;
    this.one("unveil", function() {
      var source = this.getAttribute(attrib);
      source = source || this.getAttribute("data-src");
      if (source) {
        this.setAttribute("src", source);
        if (typeof callback === "function") {
          callback.call(this);
        }
      }
    });
    function unveil() {
      var inview = images.filter(function() {
        var $e = $(this), wt = $w.scrollTop(), wb = wt + $w.height(), et = $e.offset().top, eb = et + $e.height();
        return eb >= wt - th && et <= wb + th;
      });
      loaded = inview.trigger("unveil");
      images = images.not(loaded);
    }
    $w.scroll(unveil);
    $w.resize(unveil);
    unveil();
    return this;
  };
})(window.jQuery || window.Zepto);
var Lazy = new function() {
  var o = this;
  o.r = {};
  o.f = null;
  o.q = [];
  o.loading = false;
  o.load = function(l, f) {
    var c = true;
    for (var i = 0;i < l.length;i++) {
      if (!o.r[l[i]]) {
        c = false;
        break;
      }
    }
    if (c) {
      return c;
    }
    o.q.push({l:l.concat(), f:f});
    if (!o.loading) {
      return o.p();
    }
  };
  o.p = function() {
    while (o.q[0].l.length > 0) {
      var f = o.q[0].l.shift();
      if (!o.r[f]) {
        o.loading = true;
        o.f = f;
        if (f.indexOf(".css") > -1) {
          LazyLoad.css(f, function() {
            Lazy.c();
          });
        } else {
          LazyLoad.js(f, function() {
            Lazy.c();
          });
        }
        return;
      }
    }
    o.qc();
    return true;
  };
  o.c = function() {
    o.r[o.f] = true;
    if (o.q[0].l.length > 0) {
      o.p();
    } else {
      o.qc();
    }
  };
  o.qc = function() {
    if (o.q[0].f) {
      o.q[0].f();
    }
    o.q.shift();
    if (o.q.length > 0) {
      o.p();
    } else {
      o.loading = false;
    }
  };
};
_fdk.fuup = {"fuga":{"settings":{"autoUpload":"0", "showControls":"0", "timeout":"60", "showImages":"1", "multi":"1", "chunkSize":"131072", "chunkLimit":"6", "fileLimit":"80", "image":{"width":"2048", "height":"2048", "quality":"90", "type":"jpg,jpeg,gif,png"}, "appSize":{"width":"-1", "height":"200"}, "callback":"GaleryEdit.check"}, "service":{"url":"files.php", "vars":{"k":_fdk.cfg.page, "f":"fuga", "auth":_fdk.cfg.auth}}}};
var tmp = jQuery.extend(true, {}, _fdk.fuup.fuga);
tmp.settings.autoUpload = "1";
tmp.settings.showImages = "0";
tmp.settings.multi = "0";
tmp.settings.appSize.width = "100";
tmp.settings.appSize.height = "26";
tmp.settings.callback = "fuupUploadComplete";
tmp.service.vars.f = "tempStore";
_fdk.fuup.tempStore = tmp;
_fdk.fuup.fuga.settings.browseImg = "http://fundekave.net/assets/browse_big.png";
 
