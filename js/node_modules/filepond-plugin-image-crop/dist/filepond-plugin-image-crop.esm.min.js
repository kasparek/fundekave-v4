/*
 * FilePondPluginImageCrop 1.0.3
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */
const isImage=t=>/^image/.test(t.type),getAutoCropRect=(t,e)=>{let i,n,o,r;return t<e?(n=0,i=.5*(1-(o=(r=1)/e*t))):(i=0,n=.5*(1-(r=(o=1)/t*e))),{x:i,y:n,height:r,width:o}},getNumericAspectRatioFromString=t=>{if("string"==typeof t){const[e,i]=t.split(":");return i/e}return t};var plugin$1=t=>{const{addFilter:e,utils:i}=t,{Type:n,loadImage:o,isFile:r}=i;return e("DID_LOAD_ITEM",(t,{query:e})=>new Promise((i,n)=>{const a=t.file;if(!r(a)||!isImage(a)||!e("GET_ALLOW_IMAGE_CROP"))return i(t);const c=e("GET_IMAGE_CROP_ASPECT_RATIO");if(null===c)return i(t);const u=getNumericAspectRatioFromString(c),l=URL.createObjectURL(a);o(l).then(e=>{URL.revokeObjectURL(l);let n=e.naturalWidth,o=e.naturalHeight;const r=(t.getMetadata("exif")||{}).orientation||-1;r>=5&&r<=8&&([n,o]=[o,n]);const a=getAutoCropRect(o/n,u);t.setMetadata("crop",{rect:a,aspectRatio:u}),i(t)}).catch(e=>{i(t)})})),{options:{allowImageCrop:[!0,n.BOOLEAN],imageCropAspectRatio:[null,n.STRING]}}};"undefined"!=typeof navigator&&document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:plugin$1}));export default plugin$1;