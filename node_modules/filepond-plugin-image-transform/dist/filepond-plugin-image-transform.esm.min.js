/*
 * FilePondPluginImageTransform 2.1.0
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */
const isImage=t=>/^image/.test(t.type),transforms={1:()=>[1,0,0,1,0,0],2:t=>[-1,0,0,1,t,0],3:(t,e)=>[-1,0,0,-1,t,e],4:(t,e)=>[1,0,0,-1,0,e],5:()=>[0,1,1,0,0,0],6:(t,e)=>[0,1,-1,0,e,0],7:(t,e)=>[0,-1,-1,0,e,t],8:t=>[0,-1,1,0,0,t]},fixImageOrientation=(t,e,a,n)=>{-1!==n&&t.transform(...transforms[n](e,a))},imageToImageData=(t,e,a)=>{e||(e={x:0,y:0,width:1,height:1});const n=document.createElement("canvas"),i=t.naturalWidth,o=t.naturalHeight;a>=5&&a<=8?(n.width=o,n.height=i):(n.width=i,n.height=o);const r=n.getContext("2d");r.save(),fixImageOrientation(r,i,o,a),r.drawImage(t,0,0,i,o),r.restore();return r.getImageData(Math.round(e.x*n.width),Math.round(e.y*n.height),Math.round(e.width*n.width),Math.round(e.height*n.height))},imageDataToBlob=(t,e)=>new Promise((a,n)=>{const i=document.createElement("canvas");i.width=t.width,i.height=t.height;i.getContext("2d").putImageData(t,0,0),i.toBlob(a,e.type,e.quality)}),objectToImageData=t=>{let e;try{e=new ImageData(t.width,t.height)}catch(a){e=document.createElement("canvas").getContext("2d").createImageData(t.width,t.height)}return e.data.set(t.data),e},TransformWorker=()=>{const t={resize:function(t,e){const{mode:a,upscale:n}=e;let{width:i,height:o}=e.size;if(null===i?i=o:null===o&&(o=i),"force"!==a){let e=i/t.width,r=o/t.height,s=1;if("cover"===a?s=Math.max(e,r):"contain"===a&&(s=Math.min(e,r)),s>1&&!1===n)return t;i=t.width*s,o=t.height*s}const r=t.width,s=t.height,g=Math.round(i),l=Math.round(o);for(var h=t.data,d=new Uint8ClampedArray(g*l*4),m=r/g,u=s/l,c=Math.ceil(m/2),p=Math.ceil(u/2),f=0;f<l;f++)for(var T=0;T<g;T++){for(var w=4*(T+f*g),M=0,y=0,v=0,x=gx_g=gx_b=gx_a=0,b=(f+.5)*u,_=Math.floor(f*u);_<(f+1)*u;_++)for(var I=Math.abs(b-(_+.5))/p,E=(T+.5)*m,A=I*I,O=Math.floor(T*m);O<(T+1)*m;O++){var R=Math.abs(E-(O+.5))/c,U=Math.sqrt(A+R*R);U>=-1&&U<=1&&(M=2*U*U*U-3*U*U+1)>0&&(R=4*(O+_*r),gx_a+=M*h[R+3],v+=M,h[R+3]<255&&(M=M*h[R+3]/250),x+=M*h[R],gx_g+=M*h[R+1],gx_b+=M*h[R+2],y+=M)}d[w]=x/y,d[w+1]=gx_g/y,d[w+2]=gx_b/y,d[w+3]=gx_a/v}return{data:d,width:g,height:l}}};self.onmessage=(e=>{((e,a)=>{a(((e,a)=>(e.forEach(e=>{a=t[e.type](a,e.data)}),a))(e.transforms,e.imageData))})(e.data.message,t=>{self.postMessage({id:e.data.id,message:t},[t.data.buffer])})})};HTMLCanvasElement.prototype.toBlob||Object.defineProperty(HTMLCanvasElement.prototype,"toBlob",{value:function(t,e,a){const n=this;setTimeout(()=>{const i=n.toDataURL(e,a).split(",")[1],o=atob(i);let r=o.length;const s=new Uint8Array(r);for(;r--;)s[r]=o.charCodeAt(r);t(new Blob([s],{type:e||"image/png"}))})}});var plugin$1=t=>{const{addFilter:e,utils:a}=t,{Type:n,forin:i,loadImage:o,getFileFromBlob:r,getFilenameWithoutExtension:s,createWorker:g,createBlob:l,renameFile:h,isFile:d}=a,m=["resize"];return e("PREPARE_OUTPUT",(t,{query:e,item:a})=>new Promise((n,u)=>{if(!d(t)||!isImage(t)||!e("GET_ALLOW_IMAGE_TRANSFORM"))return n(t);const c=e("GET_IMAGE_TRANSFORM_OUTPUT_QUALITY"),p=null===c?null:c/100,f=e("GET_IMAGE_TRANSFORM_OUTPUT_QUALITY_MODE"),T=e("GET_IMAGE_TRANSFORM_OUTPUT_MIME_TYPE"),{crop:w}=a.getMetadata(),M=[];if(i(a.getMetadata(),(t,e)=>{m.includes(t)&&M.push({type:t,data:e})}),(null===p||null!==p&&"optional"===f)&&null===T&&!w&&!M.length)return n(t);const y=(e,a)=>{imageDataToBlob(e,a).then(e=>{const a=r(e,((t,e)=>{return`${s(t)}.${"image/jpeg"===e?"jpg":e.split("/")[1]}`})(t.name,(t=>"image/jpeg"===t||"image/png"===t?t:"image/jpeg")(e.type)));n(a)}).catch(t=>{console.error(t)})},v=URL.createObjectURL(t);if(/svg/.test(t.type)&&null===T){if(!w)return n(t);const e=new FileReader;return e.onloadend=(()=>{const a=document.createElement("div");a.style.cssText="position:absolute;pointer-events:none;width:0;height:0;visibility:hidden;",a.innerHTML=e.result;const i=a.querySelector("svg");document.body.appendChild(a);const o=i.getBBox();a.parentNode.removeChild(a);const r=i.getAttribute("viewBox")||"",s=i.getAttribute("width")||"",g=i.getAttribute("height")||"";let d=parseFloat(s)||null,m=parseFloat(g)||null;const u=(s.match(/[a-z]+/)||[])[0]||"",c=(g.match(/[a-z]+/)||[])[0]||"";i.removeAttribute("width"),i.removeAttribute("height");const p=i.outerHTML,f=r.split(" ").map(parseFloat),T=f.length?{x:f[0],y:f[1],width:f[2],height:f[3]}:o;d||(d=T.width),m||(m=T.height);const M=`width="${d*w.rect.width}${u}"`,y=`height="${m*w.rect.height}${c}"`,v={x:d*-w.rect.x,y:m*-w.rect.y};n(h(l(`<?xml version="1.0" encoding="UTF-8"?>\n<svg ${M} ${y} \n  viewBox="0 0 ${d} ${m}" \n  preserveAspectRatio="xMinYMin slice"\n  xmlns="http://www.w3.org/2000/svg">\n  <g transform="translate(${v.x}, ${v.y})">\n    ${p}\n  </g>\n</svg>`,"image/svg+xml"),t.name))}),void e.readAsText(t)}o(v).then(e=>{URL.revokeObjectURL(v);const n=(a.getMetadata("exif")||{}).orientation||-1,i=imageToImageData(e,w?w.rect:null,n);if(!M.length)return void y(i,{quality:p,type:T||t.type});const o=g(TransformWorker);o.post({transforms:M,imageData:i},e=>{y(objectToImageData(e),{quality:p,type:T||t.type}),o.terminate()},[i.data.buffer])})})),{options:{allowImageTransform:[!0,n.BOOLEAN],imageTransformOutputMimeType:[null,n.STRING],imageTransformOutputQuality:[null,n.INT],imageTransformOutputQualityMode:["always",n.STRING]}}};"undefined"!=typeof navigator&&document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:plugin$1}));export default plugin$1;